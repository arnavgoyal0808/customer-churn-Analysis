name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', 3.11]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest black flake8
    
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
    
    - name: Format check with black
      run: |
        black --check --diff .
    
    - name: Test data preprocessing
      run: |
        python -c "
        import sys
        sys.path.append('src')
        from data_preprocessing_kaggle import KaggleDataPreprocessor
        print('✅ Data preprocessing module imported successfully')
        "
    
    - name: Test core functionality
      run: |
        python -c "
        import pandas as pd
        import numpy as np
        import matplotlib.pyplot as plt
        import seaborn as sns
        print('✅ Core dependencies working')
        "
    
    - name: Run synthetic data demo
      run: |
        python demo.py
        echo '✅ Synthetic data demo completed'

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Run security scan
      uses: pypa/gh-action-pip-audit@v1.0.8
      with:
        inputs: requirements.txt

  documentation:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Check README
      run: |
        if [ ! -f README.md ]; then
          echo "❌ README.md not found"
          exit 1
        fi
        echo "✅ README.md exists"
    
    - name: Check LICENSE
      run: |
        if [ ! -f LICENSE ]; then
          echo "❌ LICENSE not found"
          exit 1
        fi
        echo "✅ LICENSE exists"
    
    - name: Check requirements.txt
      run: |
        if [ ! -f requirements.txt ]; then
          echo "❌ requirements.txt not found"
          exit 1
        fi
        echo "✅ requirements.txt exists"
